{"ast":null,"code":"import _slicedToArray from \"F:\\\\netflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"F:\\\\netflix\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"F:\\\\netflix\\\\src\\\\components\\\\MovieContainer.jsx\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    left:100%;\\n    cursor:pointer;\\n    right:none;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    width: \", \";\\n    height:100%;\\n    position:absolute;\\n    right:100%;\\n    z-index:5;\\n    opacity:0;\\n    border:none;\\n    color:white;\\n    outline:none;\\n    cursor:pointer;\\n    &:hover{\\n        opacity:1;\\n        background-color: rgba(0,0,0,0.5)\\n    }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    color:white;\\n    margin: 0 auto;\\n    width: calc(100% - (\", \" + \", \"));\\n    margin-bottom:10px;\\n    .title{\\n        font-weight:bold;\\n        margin:20px 0px;\\n    }\\n    .container{\\n        position:relative;\\n    }\\n    .slider{\\n        display:flexbox;\\n        transform: \", \";\\n        transition:0.2s;\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport MovieItem from \"./MovieItem\";\nconst BtnSize = \"45px\";\nconst Wrapper = styled.div(_templateObject(), BtnSize, BtnSize, props => \"translateX(-\".concat(props.translate, \"px);\"));\nconst BtnLeft = styled.button(_templateObject2(), BtnSize);\nconst BtnRight = styled(BtnLeft)(_templateObject3());\n\nconst MovieContainer = props => {\n  const _React$useState = React.useState(1),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        sliderWidth = _React$useState4[0],\n        setSliderWidth = _React$useState4[1];\n\n  const slider = React.useRef(undefined);\n  React.useEffect(() => {\n    setSliderWidth(slider.current.offsetWidth);\n  }, []);\n\n  const onClickLeft = () => {\n    if (page !== 1) {\n      setPage(page - 1);\n    }\n  };\n\n  const onClickRight = () => {\n    if (page >= Math.ceil(props.movies.length / 5)) {\n      console.log(\"걸림\", page, page < Math.ceil(props.movies.length / 5));\n      setPage(1);\n    } else {\n      setPage(page + 1);\n    }\n  };\n\n  return React.createElement(Wrapper, {\n    translate: (page - 1) * (sliderWidth + 10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.title), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(BtnLeft, {\n    onClick: onClickLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" \", \"<\", \" \"), React.createElement(BtnRight, {\n    onClick: onClickRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" \", \">\", \" \"), React.createElement(\"div\", {\n    className: \"slider\",\n    ref: slider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, (props.movies || []).map(value => React.createElement(MovieItem, {\n    title: value.title,\n    imgs: 'http://image.tmdb.org/t/p/w185' + value.backdrop_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })))));\n};\n\nexport default MovieContainer;","map":{"version":3,"sources":["F:/netflix/src/components/MovieContainer.jsx"],"names":["React","styled","MovieItem","BtnSize","Wrapper","div","props","translate","BtnLeft","button","BtnRight","MovieContainer","useState","page","setPage","sliderWidth","setSliderWidth","slider","useRef","undefined","useEffect","current","offsetWidth","onClickLeft","onClickRight","Math","ceil","movies","length","console","log","title","map","value","backdrop_path"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAMC,OAAO,GAAG,MAAhB;AAGA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAV,oBAGaF,OAHb,EAG0BA,OAH1B,EAcQG,KAAK,0BAAmBA,KAAK,CAACC,SAAzB,SAdb,CAAb;AAkBA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,MAAV,qBACAN,OADA,CAAb;AAiBA,MAAMO,QAAQ,GAAGT,MAAM,CAACO,OAAD,CAAT,oBAAd;;AAMA,MAAMG,cAAc,GAAGL,KAAK,IAAI;AAAA,0BAEJN,KAAK,CAACY,QAAN,CAAe,CAAf,CAFI;AAAA;AAAA,QAErBC,IAFqB;AAAA,QAEfC,OAFe;;AAAA,2BAGUd,KAAK,CAACY,QAAN,CAAe,CAAf,CAHV;AAAA;AAAA,QAGrBG,WAHqB;AAAA,QAGRC,cAHQ;;AAI5B,QAAMC,MAAM,GAAGjB,KAAK,CAACkB,MAAN,CAAaC,SAAb,CAAf;AAEAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AAClBJ,IAAAA,cAAc,CAACC,MAAM,CAACI,OAAP,CAAeC,WAAhB,CAAd;AACH,GAFD,EAEG,EAFH;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIV,IAAI,KAAK,CAAb,EAAgB;AACZC,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH;AACJ,GAJD;;AAKA,QAAMW,YAAY,GAAG,MAAM;AACvB,QAAIX,IAAI,IAAIY,IAAI,CAACC,IAAL,CAAUpB,KAAK,CAACqB,MAAN,CAAaC,MAAb,GAAsB,CAAhC,CAAZ,EAAgD;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBjB,IAAlB,EAAwBA,IAAI,GAAGY,IAAI,CAACC,IAAL,CAAUpB,KAAK,CAACqB,MAAN,CAAaC,MAAb,GAAsB,CAAhC,CAA/B;AACAd,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH,KAHD,MAIK;AACDA,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH;AACJ,GARD;;AAWA,SAAO,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE,CAACA,IAAI,GAAG,CAAR,KAAcE,WAAW,GAAG,EAA5B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBT,KAAK,CAACyB,KAA9B,CADG,EAEH;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAER,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiC,GAAjC,MADJ,EAEI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmC,GAAnC,MAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAEP,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACX,KAAK,CAACqB,MAAN,IAAgB,EAAjB,EAAqBK,GAArB,CAAyBC,KAAK,IAC3B,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,KAAK,CAACF,KAAxB;AAA+B,IAAA,IAAI,EAAE,mCAAmCE,KAAK,CAACC,aAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAHJ,CAFG,CAAP;AAYH,CAtCD;;AAwCA,eAAevB,cAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\"\r\nimport MovieItem from \"./MovieItem\"\r\nconst BtnSize = \"45px\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    color:white;\r\n    margin: 0 auto;\r\n    width: calc(100% - (${BtnSize} + ${BtnSize}));\r\n    margin-bottom:10px;\r\n    .title{\r\n        font-weight:bold;\r\n        margin:20px 0px;\r\n    }\r\n    .container{\r\n        position:relative;\r\n    }\r\n    .slider{\r\n        display:flexbox;\r\n        transform: ${props => `translateX(-${props.translate}px);`};\r\n        transition:0.2s;\r\n    }\r\n`\r\nconst BtnLeft = styled.button`\r\n    width: ${BtnSize};\r\n    height:100%;\r\n    position:absolute;\r\n    right:100%;\r\n    z-index:5;\r\n    opacity:0;\r\n    border:none;\r\n    color:white;\r\n    outline:none;\r\n    cursor:pointer;\r\n    &:hover{\r\n        opacity:1;\r\n        background-color: rgba(0,0,0,0.5)\r\n    }\r\n`\r\n\r\nconst BtnRight = styled(BtnLeft)`\r\n    left:100%;\r\n    cursor:pointer;\r\n    right:none;\r\n`\r\n\r\nconst MovieContainer = props => {\r\n\r\n    const [page, setPage] = React.useState(1);\r\n    const [sliderWidth, setSliderWidth] = React.useState(0);\r\n    const slider = React.useRef(undefined)\r\n\r\n    React.useEffect(() => {\r\n        setSliderWidth(slider.current.offsetWidth)\r\n    }, [])\r\n\r\n    const onClickLeft = () => {\r\n        if (page !== 1) {\r\n            setPage(page - 1);\r\n        }\r\n    };\r\n    const onClickRight = () => {\r\n        if (page >= Math.ceil(props.movies.length / 5)) {\r\n            console.log(\"걸림\", page, page < Math.ceil(props.movies.length / 5))\r\n            setPage(1);\r\n        }\r\n        else {\r\n            setPage(page + 1)\r\n        }\r\n    };\r\n\r\n\r\n    return <Wrapper translate={(page - 1) * (sliderWidth + 10)}>\r\n        <div className=\"title\">{props.title}</div>\r\n        <div className=\"container\">\r\n            <BtnLeft onClick={onClickLeft}> {\"<\"} </BtnLeft>\r\n            <BtnRight onClick={onClickRight}> {\">\"} </BtnRight>\r\n            <div className=\"slider\" ref={slider}>\r\n                {(props.movies || []).map(value => (\r\n                    <MovieItem title={value.title} imgs={'http://image.tmdb.org/t/p/w185' + value.backdrop_path} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    </Wrapper>\r\n}\r\n\r\nexport default MovieContainer;"]},"metadata":{},"sourceType":"module"}