{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-stopwatch\\\\src\\\\StopwatchHistory.jsx\";\nimport React from 'react';\nimport './styles.css';\n\nclass StopwatchHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setHistoryState = () => {\n      if (localStorage.times) {\n        this.setState({\n          history: localStorage.times.split('|')\n        });\n      } else {\n        this.setState({\n          history: []\n        });\n      }\n    };\n\n    this.saveToLocalStorage = () => {\n      if (localStorage.times) {\n        localStorage.times = \"\".concat(Date().toString(), \" :: \").concat(this.props.formatTime(this.props.currentTimeMin), \":\").concat(this.props.formatTime(this.props.currentTimeSec), \":\").concat(this.props.formatTime(this.props.currentTimeMs, 'ms'), \"|\") + localStorage.times;\n      } else {\n        localStorage.times = \"\".concat(Date().toString(), \" :: \").concat(this.props.formatTime(this.props.currentTimeMin), \":\").concat(this.props.formatTime(this.props.currentTimeSec), \":\").concat(this.props.formatTime(this.props.currentTimeMs, 'ms'), \"|\");\n      }\n    };\n\n    this.saveTime = () => {\n      if (typeof Storage !== 'undefined') {\n        this.saveToLocalStorage();\n      } else {\n        console.error('local storage not supported');\n      }\n\n      this.setHistoryState();\n    };\n\n    this.resetHistory = () => {\n      if (localStorage.times) {\n        localStorage.removeItem('times');\n      }\n\n      this.setHistoryState();\n    };\n\n    this.state = {\n      history: []\n    };\n  }\n\n  componentDidMount() {\n    this.setHistoryState();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'stopwatch__history',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.saveTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\uC2DC\\uAC04 \\uC800\\uC7A5\"), React.createElement(\"button\", {\n      onClick: this.resetHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\uB9AC\\uC14B\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"History\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.history.map((item, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, item))));\n  }\n\n}\n\nexport default StopwatchHistory;","map":{"version":3,"sources":["F:/react-stopwatch/src/StopwatchHistory.jsx"],"names":["React","StopwatchHistory","Component","constructor","props","setHistoryState","localStorage","times","setState","history","split","saveToLocalStorage","Date","toString","formatTime","currentTimeMin","currentTimeSec","currentTimeMs","saveTime","Storage","console","error","resetHistory","removeItem","state","componentDidMount","render","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,eAZmB,GAYD,MAAM;AACtB,UAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtB,aAAKC,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEH,YAAY,CAACC,KAAb,CAAmBG,KAAnB,CAAyB,GAAzB;AAAX,SAAd;AACD,OAFD,MAEO;AACL,aAAKF,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,KAlBkB;;AAAA,SAoBnBE,kBApBmB,GAoBE,MAAM;AACzB,UAAIL,YAAY,CAACC,KAAjB,EAAwB;AACtBD,QAAAA,YAAY,CAACC,KAAb,GACE,UAAGK,IAAI,GAAGC,QAAP,EAAH,iBAA2B,KAAKT,KAAL,CAAWU,UAAX,CACzB,KAAKV,KAAL,CAAWW,cADc,CAA3B,cAEK,KAAKX,KAAL,CAAWU,UAAX,CACH,KAAKV,KAAL,CAAWY,cADR,CAFL,cAIK,KAAKZ,KAAL,CAAWU,UAAX,CAAsB,KAAKV,KAAL,CAAWa,aAAjC,EAAgD,IAAhD,CAJL,SAKAX,YAAY,CAACC,KANf;AAOD,OARD,MAQO;AACLD,QAAAA,YAAY,CAACC,KAAb,aAAwBK,IAAI,GAAGC,QAAP,EAAxB,iBAAgD,KAAKT,KAAL,CAAWU,UAAX,CAC9C,KAAKV,KAAL,CAAWW,cADmC,CAAhD,cAEK,KAAKX,KAAL,CAAWU,UAAX,CACH,KAAKV,KAAL,CAAWY,cADR,CAFL,cAIK,KAAKZ,KAAL,CAAWU,UAAX,CAAsB,KAAKV,KAAL,CAAWa,aAAjC,EAAgD,IAAhD,CAJL;AAKD;AACF,KApCkB;;AAAA,SAsCnBC,QAtCmB,GAsCR,MAAM;AACf,UAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;AAClC,aAAKR,kBAAL;AACD,OAFD,MAEO;AACLS,QAAAA,OAAO,CAACC,KAAR,CAAc,6BAAd;AACD;;AACD,WAAKhB,eAAL;AACD,KA7CkB;;AAAA,SA+CnBiB,YA/CmB,GA+CJ,MAAM;AACnB,UAAIhB,YAAY,CAACC,KAAjB,EAAwB;AACtBD,QAAAA,YAAY,CAACiB,UAAb,CAAwB,OAAxB;AACD;;AACD,WAAKlB,eAAL;AACD,KApDkB;;AAGjB,SAAKmB,KAAL,GAAa;AACXf,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKpB,eAAL;AACD;;AA4CDqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKR,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKI,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKE,KAAL,CAAWf,OAAX,CAAmBkB,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,IAAjB,CAAxC,CADH,CAJF,CADF;AAUD;;AAlE4C;;AAqE/C,eAAe3B,gBAAf","sourcesContent":["import React from 'react';\nimport './styles.css';\n\nclass StopwatchHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setHistoryState();\n  }\n\n  setHistoryState = () => {\n    if (localStorage.times) {\n      this.setState({ history: localStorage.times.split('|') });\n    } else {\n      this.setState({ history: [] });\n    }\n  };\n\n  saveToLocalStorage = () => {\n    if (localStorage.times) {\n      localStorage.times =\n        `${Date().toString()} :: ${this.props.formatTime(\n          this.props.currentTimeMin\n        )}:${this.props.formatTime(\n          this.props.currentTimeSec\n        )}:${this.props.formatTime(this.props.currentTimeMs, 'ms')}|` +\n        localStorage.times;\n    } else {\n      localStorage.times = `${Date().toString()} :: ${this.props.formatTime(\n        this.props.currentTimeMin\n      )}:${this.props.formatTime(\n        this.props.currentTimeSec\n      )}:${this.props.formatTime(this.props.currentTimeMs, 'ms')}|`;\n    }\n  };\n\n  saveTime = () => {\n    if (typeof Storage !== 'undefined') {\n      this.saveToLocalStorage();\n    } else {\n      console.error('local storage not supported');\n    }\n    this.setHistoryState();\n  };\n\n  resetHistory = () => {\n    if (localStorage.times) {\n      localStorage.removeItem('times');\n    }\n    this.setHistoryState();\n  };\n\n  render() {\n    return (\n      <div className={'stopwatch__history'}>\n        <button onClick={this.saveTime}>시간 저장</button>\n        <button onClick={this.resetHistory}>리셋</button>\n        <h3>History</h3>\n        <ul>\n          {this.state.history.map((item, index) => <li key={index}>{item}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default StopwatchHistory;\n"]},"metadata":{},"sourceType":"module"}