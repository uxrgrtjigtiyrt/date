{"ast":null,"code":"var _jsxFileName = \"F:\\\\calendar\\\\src\\\\Stopwatch.jsx\";\nimport React from 'react';\nimport StopwatchDisplay from './StopwatchDisplay.jsx';\nimport StopwatchHistory from './StopwatchHistory.jsx';\nimport './styles.css';\n\nclass Stopwatch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formatTime = (val, ...rest) => {\n      let value = val.toString();\n\n      if (value.length < 2) {\n        value = '0' + value;\n      }\n\n      if (rest[0] === 'ms' && value.length < 3) {\n        value = '0' + value;\n      }\n\n      return value;\n    };\n\n    this.start = () => {\n      if (!this.state.running) {\n        this.setState({\n          running: true\n        });\n        this.watch = setInterval(() => this.pace(), 10);\n      }\n    };\n\n    this.stop = () => {\n      this.setState({\n        running: false\n      });\n      clearInterval(this.watch);\n    };\n\n    this.pace = () => {\n      this.setState({\n        currentTimeMs: this.state.currentTimeMs + 10\n      });\n\n      if (this.state.currentTimeMs >= 1000) {\n        this.setState({\n          currentTimeSec: this.state.currentTimeSec + 1\n        });\n        this.setState({\n          currentTimeMs: 0\n        });\n      }\n\n      if (this.state.currentTimeSec >= 60) {\n        this.setState({\n          currentTimeMin: this.state.currentTimeMin + 1\n        });\n        this.setState({\n          currentTimeSec: 0\n        });\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        currentTimeMs: 0,\n        currentTimeSec: 0,\n        currentTimeMin: 0\n      });\n    };\n\n    this.state = {\n      running: false,\n      currentTimeMs: 0,\n      currentTimeSec: 0,\n      currentTimeMin: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"stopwatch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      ref: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Stopwatch\"), this.state.running === false && React.createElement(\"button\", {\n      onClick: this.start,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"START\"), this.state.running === true && React.createElement(\"button\", {\n      onClick: this.stop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"STOP\"), React.createElement(\"button\", {\n      onClick: this.reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"RESET\"), React.createElement(StopwatchDisplay, Object.assign({\n      ref: \"display\"\n    }, this.state, {\n      formatTime: this.formatTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(StopwatchHistory, Object.assign({}, this.state, {\n      formatTime: this.formatTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["F:/calendar/src/Stopwatch.jsx"],"names":["React","StopwatchDisplay","StopwatchHistory","Stopwatch","Component","constructor","props","formatTime","val","rest","value","toString","length","start","state","running","setState","watch","setInterval","pace","stop","clearInterval","currentTimeMs","currentTimeSec","currentTimeMin","reset","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport StopwatchDisplay from './StopwatchDisplay.jsx';\nimport StopwatchHistory from './StopwatchHistory.jsx';\nimport './styles.css';\n\nclass Stopwatch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      running: false,\n      currentTimeMs: 0,\n      currentTimeSec: 0,\n      currentTimeMin: 0,\n    };\n  }\n\n  formatTime = (val, ...rest) => {\n    let value = val.toString();\n    if (value.length < 2) {\n      value = '0' + value;\n    }\n    if (rest[0] === 'ms' && value.length < 3) {\n      value = '0' + value;\n    }\n    return value;\n  };\n\n  start = () => {\n    if (!this.state.running) {\n      this.setState({ running: true });\n      this.watch = setInterval(() => this.pace(), 10);\n    }\n  };\n\n  stop = () => {\n    this.setState({ running: false });\n    clearInterval(this.watch);\n  };\n\n  pace = () => {\n    this.setState({ currentTimeMs: this.state.currentTimeMs + 10 });\n    if (this.state.currentTimeMs >= 1000) {\n      this.setState({ currentTimeSec: this.state.currentTimeSec + 1 });\n      this.setState({ currentTimeMs: 0 });\n    }\n    if (this.state.currentTimeSec >= 60) {\n      this.setState({ currentTimeMin: this.state.currentTimeMin + 1 });\n      this.setState({ currentTimeSec: 0 });\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      currentTimeMs: 0,\n      currentTimeSec: 0,\n      currentTimeMin: 0,\n    });\n  };\n\n  render() {\n    return (\n      <div className='stopwatch'>\n        <h2 ref=\"header\">Stopwatch</h2>\n        {this.state.running === false && (\n          <button onClick={this.start}>START</button>\n        )}\n        {this.state.running === true && (\n          <button onClick={this.stop}>STOP</button>\n        )}\n        <button onClick={this.reset}>RESET</button>\n        <StopwatchDisplay\n          ref=\"display\"\n          {...this.state}\n          formatTime={this.formatTime}\n        />\n        <StopwatchHistory {...this.state} formatTime={this.formatTime} />\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}